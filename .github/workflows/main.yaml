name: Test and Build
on:
  push:
  workflow_dispatch:
    inputs:
      deploy-production:
        description: If "Yes" then build and deploy to production
        required: false
      deploy-develop:
        description: If "Yes" then build and deploy to develop
        required: false

jobs:
  test-and-build:
    name: Test and build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 15
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install npm modules
        run: npm ci
      - name: Test
        run: npm test
      - name: Production build
        run: npm run build
      - name: Upload web artifact
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: build/

  deploy-web-develop:
    name: Deploy Production
    needs: test-and-build
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/develop') || (startsWith(github.ref,'refs/tags/') && (!contains(github.ref,'RC') && !contains(github.ref,'SNAPSHOT'))) || (github.event.inputs.deploy-develop == 'Yes') || (github.event.inputs.deploy-production == 'Yes')
    steps:
      - name: Download web artifacts
        uses: actions/download-artifact@v2
        with:
          name: web
          path: build/

      - name: Upload
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          protocol: ftps
          port: ${{ secrets.FTP_PORT }}
          server-dir: ${{ secrets.FTP_TARGET_DEVELOP }}
          local-dir: build/

  deploy-web-production:
    name: Deploy Production
    needs: test-and-build
    runs-on: ubuntu-latest
    if: (startsWith(github.ref,'refs/tags/') && (!contains(github.ref,'RC') && !contains(github.ref,'SNAPSHOT'))) || (github.event.inputs.deploy-production == 'Yes')
    steps:
      - name: Download web artifacts
        uses: actions/download-artifact@v2
        with:
          name: web
          path: build/

      - name: Upload
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          protocol: ftps
          port: ${{ secrets.FTP_PORT }}
          server-dir: ${{ secrets.FTP_TARGET_PRODUCTION }}
          local-dir: build/
